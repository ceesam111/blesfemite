# Generated by Django 3.0.8 on 2022-04-22 10:58

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import mycompany.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AIRTEL',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('A_750MB', models.IntegerField()),
                ('A_1_POINT_5GB', models.IntegerField()),
                ('A_2GB', models.IntegerField()),
                ('A_3GB', models.IntegerField()),
                ('A_4_POINT_5GB', models.IntegerField()),
                ('A_6GB', models.IntegerField()),
                ('A_10GB', models.IntegerField()),
                ('A_11GB', models.IntegerField()),
                ('A_20GB', models.IntegerField()),
                ('A_40GB', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=150)),
                ('feedback', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='DSTV',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('PADI', models.IntegerField(blank=True)),
                ('XTRAVIEW', models.IntegerField(blank=True)),
                ('ASIAN_ADDON', models.IntegerField(blank=True)),
                ('FRENCH_BOUQUET', models.IntegerField(blank=True)),
                ('COMPACT_PLUS_FRENCH', models.IntegerField(blank=True)),
                ('CONFAM', models.IntegerField(blank=True)),
                ('YANGA', models.IntegerField(blank=True)),
                ('PREMIUM', models.IntegerField(blank=True)),
                ('COMPACT_PLUS', models.IntegerField(blank=True)),
                ('COMPACT_PLUS_ASIAN_ADDON', models.IntegerField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='ELECTRICITY',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('EKO_PREPAID', models.IntegerField()),
                ('IKEJA_PREPAID', models.IntegerField()),
                ('IBADAN_PREPAID', models.IntegerField()),
                ('ENUGU_PREPAID', models.IntegerField()),
                ('ABUJA_PREPAID', models.IntegerField()),
                ('EKO_POSTPAID', models.IntegerField()),
                ('ENUGU_POSTPAID', models.IntegerField()),
                ('ABUJA_POSTPAID', models.IntegerField()),
                ('IBADAN_POSTPAID', models.IntegerField()),
                ('IKEJA_POSTPAID', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='EXAM',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('WAEC_PIN', models.IntegerField()),
                ('NECO_PIN', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='GLO',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('A_50MB', models.IntegerField(blank=True)),
                ('A_150MB', models.IntegerField(blank=True)),
                ('A_350MB', models.IntegerField(blank=True)),
                ('A_1_POINT_31GB', models.IntegerField(blank=True)),
                ('A_2_POINT_9GB', models.IntegerField(blank=True)),
                ('A_4_POINT_1GB', models.IntegerField(blank=True)),
                ('A_5_POINT_8GB', models.IntegerField(blank=True)),
                ('A_7_POINT_7GB', models.IntegerField(blank=True)),
                ('A_10GB', models.IntegerField(blank=True)),
                ('A_13_POINT_75GB', models.IntegerField(blank=True)),
                ('A_18_POINT_25GB', models.IntegerField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='GOTV',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('JOLLI', models.IntegerField(blank=True)),
                ('SMALLIE', models.IntegerField(blank=True)),
                ('LITE_QUARTERLY', models.IntegerField(blank=True)),
                ('LITE_YEARLY', models.IntegerField(blank=True)),
                ('MAX', models.IntegerField(blank=True)),
                ('JINJA', models.IntegerField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='MTN',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('A_500MB_SME', models.IntegerField(blank=True)),
                ('A_1GB_SME', models.IntegerField(blank=True)),
                ('A_2GB_SME', models.IntegerField(blank=True)),
                ('A_3GB_SME', models.IntegerField(blank=True)),
                ('A_4GB_SME', models.IntegerField(blank=True)),
                ('A_5GB_SME', models.IntegerField(blank=True)),
                ('A_10GB_SME', models.IntegerField(blank=True)),
                ('A_1GB_WEEKLY_DIRECT', models.IntegerField(blank=True)),
                ('A_6GB_WEEKLY_DIRECT', models.IntegerField(blank=True)),
                ('A_1_POINT_5GB_MONTHLY_DIRECT', models.IntegerField(blank=True)),
                ('A_2GB_MONTHLY_DIRECT', models.IntegerField(blank=True)),
                ('A_20GB_MONTHLY_DIRECT', models.IntegerField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Pricetag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(max_length=100, unique=True)),
                ('amount', models.CharField(max_length=100, unique=True)),
                ('tag_one', models.TextField(blank=True, max_length=100)),
                ('tag_two', models.TextField(blank=True, max_length=100)),
                ('tag_three', models.TextField(blank=True, max_length=100)),
                ('tag_four', models.TextField(blank=True, max_length=100)),
                ('tag_five', models.TextField(blank=True, max_length=100)),
                ('overlay', models.TextField(blank=True, max_length=100)),
                ('tag_link', models.TextField(blank=True, max_length=100)),
                ('duration', models.TextField(blank=True, max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='STARTIMES',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('SMART_1MONTH', models.IntegerField(blank=True)),
                ('BASIC_1MONTH', models.IntegerField(blank=True)),
                ('NOVA_1MONTH', models.IntegerField(blank=True)),
                ('SMART_1WEEK', models.IntegerField(blank=True)),
                ('CLASSIC_1WEEK', models.IntegerField(blank=True)),
                ('CLASSIC_1DAY', models.IntegerField(blank=True)),
                ('SMART_1DAY', models.IntegerField(blank=True)),
                ('BASIC_1DAY', models.IntegerField(blank=True)),
                ('NOVA_1DAY', models.IntegerField(blank=True)),
                ('BASIC_1WEEK', models.IntegerField(blank=True)),
                ('NOVA_1WEEK', models.IntegerField(blank=True)),
                ('SUPER_1WEEK', models.IntegerField(blank=True)),
                ('CLASSIC_1MONTH', models.IntegerField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='UserProfileInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('referral_email', models.TextField(max_length=50)),
                ('balance', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('ref_balance', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('bio', models.CharField(max_length=500)),
                ('bonus', models.TextField(max_length=100)),
                ('profile_pic', models.ImageField(blank=True, upload_to=mycompany.models.path_and_rename, verbose_name='Profile Picture')),
                ('user_type', models.CharField(choices=[('Creator', 'Creator'), ('Vnodite', 'Vnodite'), ('Miner', 'Miner')], default='Vnodite', max_length=10)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='AccountDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('balance', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='account', to='mycompany.User')),
            ],
        ),
    ]
